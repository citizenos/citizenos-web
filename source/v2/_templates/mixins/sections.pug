mixin sections(sections)
    for data, id in sections
        +section({ id, ...data })

mixin section(data = {})
    - data = { ...data, ...attributes }
    case data.type
        when 'header'
            +section-header(data)
        when 'banner'
            +section-banner(data)
        when 'example'
            +section-example(data)
        when '2-columns'
            +section-2-columns(data)
        when '3-columns'
            +section-3-columns(data)
        when '4-columns'
            +section-4-columns(data)
        when 'media'
            +section-media(data)
        when 'accordion'
            +section-accordion(data)
        when 'stats'
            +section-stats(data)
        when 'custom'
            +section-custom(data)

mixin section-layout(data = {})
    -
        data = { class: '', ...data, ...attributes }
        data.class += ' py-10 md_py-14 lg_py-32 section '
        data.class += data.color || 'white'

        const flexClass = {
            'flex-col lg_flex-row lg_items-center lg_justify-center': data.left,
            'flex-col text-center': !data.left
        }

        const headerClass = {
            'lg_mb-0': data.left
        }

        const textClass = {
            'px-4 md_px-6 lg_px-28': !data.left
        }
    div(id=data.id, class=data.class)
        .w-full.lg_container.lg_mx-auto.px-4.md_px-6.lg_px-28
            if data.title || data.text
                .flex.pb-8(class=flexClass)
                    if data.title
                        h2(class=headerClass)= data.title
                    if data.text
                        div(class=textClass)
                            +markdown(data.text)
            block

mixin section-header(data = {})
    -
        data = { class: '', ...data, ...attributes }
        data.class += ' !pt-6 !pb-4'

        const sectionData = { ...data }
        delete sectionData.title
        delete sectionData.text

    +section-layout(sectionData)
        .grid.grid-cols-1.lg_grid-cols-2.gap-12
            .lg_order-2.pt-12.pb-0.md_pb-8.lg_py-0.flex.flex-col.items-center.lg_items-start.justify-center.text-center.lg_text-left
                if data.title
                    h1.mb-6.text-7xl.font-bold= data.title
                if data.text
                    +markdown(data.text)
                if data.buttons
                    .mt-10.w-full.md_w-auto.flex.flex-col.md_flex-row.flex-wrap.gap-6
                        for button in data.buttons
                            +button({ class: 'w-full md_w-auto', ...button })
            .lg_order-1.flex.justify-start.items-end
                if data.image
                    img.mx-auto.h-80.md_h-146.lg_h-fit.lg_w-full.object-contain(src=data.image)

mixin section-banner(data = {})
    -
        data = { class: '', ...data, ...attributes }
        data.class += ' !pt-6 !pb-4'

        const sectionData = { ...data }
        delete sectionData.title
        delete sectionData.text

    +section-layout(sectionData)
        .pb-10.md_pb-0.flex.flex-col.md_flex-row.items-center.gap-12
            if data.image
                img.mx-auto.h-52.w-52.object-contain(src=data.image)
            .w-full.md_my-8.md_w-auto.flex.grow.flex-col.xl_flex-row.justify-center.md_justify-start.gap-6
                .grow.text-center.md_text-left
                    if data.title
                        h2.mb-6.text-4xl.md_text-left.font-bold= data.title
                    if data.text
                        +markdown(data.text)

                if data.buttons
                    .w-full.md_w-auto.flex.flex-col.md_flex-row.items-center.justify-center.md_justify-start.gap-6
                        for button in data.buttons
                            +button({ class: 'h-fit w-full md_w-auto', ...button })

mixin section-example(data = {})
    -
        data = { class: '', ...data, ...attributes }
        data.class += ' !pt-6 !pb-4'

        const sectionData = { ...data }
        delete sectionData.title
        delete sectionData.text

    +section-layout(sectionData)
        +markdown(data.text)

mixin section-2-columns(data = {})
    - data = { ...data, ...attributes }
    +section-layout(data)
        .grid.grid-cols-1.lg_grid-cols-2.gap-10
            for col in data.columns
                div
                    if col.image
                        img.md_float-left.w-28.aspect-square.mr-4.mb-6.md_mb-4.object-fit.bg-white.rounded-2xl(class='md_max-w-1/3' src=col.image)
                    if col.title
                        h3.lg_h-28.mb-4.flex.items-center.text-xl.font-semibold= col.title
                    .md_ml-32.lg_ml-0
                        +markdown(col.text)
                        if col.link
                            a.flex.items-center.font-bold.text-yellow-700(href=col.link.url)
                                = col.link.title
                                +icon.h-6.w-6.ml-2.text-black(type='arrow-small-down')

mixin section-3-columns(data = {})
    - data = { ...data, ...attributes }
    +section-layout(data)
        .grid.grid-cols-1.lg_grid-cols-3.gap-10
            for col in data.columns
                .flex.flex-col.md_flex-row.lg_flex-col.gap-6
                    if col.image
                        img.h-36.lg_h-60.max-w-full.lg_w-full.object-fit.bg-green-50.rounded-2xl(class='md_max-w-1/3' src=col.image)
                    .grow.flex.flex-col
                        if col.title
                            h3.mb-4.text-xl.font-semibold= col.title
                        .lg_grow
                            +markdown(col.text)
                        if col.link
                            a.mt-4.flex.items-center.font-bold.text-green-500(href=col.link.url)
                                +icon.h-6.w-6.mr-2.text-black(type='arrow-small-right')
                                = col.link.title

mixin section-4-columns(data = {})
    - data = { ...data, ...attributes }
    +section-layout({ left: true, ...data })
        .grid.grid-cols-1.lg_grid-cols-4.gap-10
            for col in data.columns
                .flex.flex-col.md_flex-row.lg_flex-col.gap-6
                    if col.image
                        img.h-36.lg_h-60.max-w-full.lg_w-full.object-fit.bg-blue-50.rounded-2xl(class='md_max-w-1/3' src=col.image)
                    .flex.flex-col.items-center.justify-center.text-center
                        if col.title
                            h3.mb-4.text-xl.font-semibold= col.title
                        +markdown(col.text)

mixin section-media(data = {})
    -
        data = { ...data, ...attributes }

        const sectionData = { ...data }
        delete sectionData.title
        delete sectionData.text

        const textClass = {
            'lg_order-2': data.mediaLeft
        }

        const mediaClass = {
            'lg_order-1': data.mediaLeft
        }
    +section-layout(sectionData)
        .grid.grid-cols-1.lg_grid-cols-2.gap-10
            .pt-12.pb-0.md_pb-8.lg_py-0(class=textClass)
                if data.title
                    h2.text-center.lg_text-left= data.title
                if data.text
                    .text-center.lg_text-left
                        +markdown(data.text)
            div(class=mediaClass)
                if data.video
                    a.w-full.aspect-vhs.flex.items-center.justify-center.bg-white.bg-cover.rounded-2xl(
                        href=`#${data.video}`
                        style=`background-image: url('${data.image}')`
                    )
                        .h-20.w-20.md_h-32.md_w-32.flex.items-center.justify-center.bg-yellow-50.opacity-90.rounded-full
                            +icon.h-12.w-12.md_h-20.md_w-20.opacity-90(type='play')

                    +youtube(video=data.video)
                else
                    img.w-full(src=data.image)

mixin section-accordion(data = {})
    -
        data = { ...data, ...attributes }

        const sectionData = { ...data }
        delete sectionData.title
        delete sectionData.text

        const id = `accordion-${Math.round(Math.random() * 1000)}`
    +section-layout(sectionData)
        .grid.grid-cols-1.lg_grid-cols-2.gap-10
            .hidden.lg_block
                for card, idx in data.cards
                    if card.image
                        img.accordion-image-lg.w-full.object-fill.rounded-2xl(id=`${id}-image-${idx}` class=card.color src=card.image)
            div
                .pb-8.text-center.lg_text-left
                    if data.title
                        h2= data.title
                    if data.text
                        +markdown(data.text)
                for card, idx in data.cards
                    .accordion-card.py-6.px-6.border-t.first_border-t-0.border-grey-300(class=[`${id}-card`, card.color] data-image=`${id}-image-${idx}`)
                        if card.image
                            img.accordion-image.lg_hidden.mb-4.h-60.md_h-80.w-full.object-fill(src=card.image)
                        .accordion-title.flex.items-center
                            if card.icon
                                +icon.h-6.w-6.mr-4(type=card.icon)
                            h3.text-xl.font-semibold= card.title
                        if card.text
                            .accordion-body.mt-4
                                +markdown(card.text)
                                if card.link
                                    a.flex.items-center.font-bold(href=card.link.url)
                                        +icon.h-6.w-6.mr-2.text-black(type='arrow-small-right')
                                        = card.link.title
        script.
            const cards = document.querySelectorAll('.#{id}-card')
            let activeCard = null

            activateCard(cards[0])

            cards.forEach(function (card) {
                card.addEventListener('click', function () { activateCard(card) })
            })

            function activateCard(card) {
                if (activeCard) {
                    document.getElementById(activeCard.dataset.image).classList.remove('active')
                    activeCard.classList.remove('active')
                    if (activeCard.nextElementSibling) activeCard.nextElementSibling.classList.remove('border-t-transparent')
                }

                document.getElementById(card.dataset.image).classList.add('active')
                card.classList.add('active')
                if (card.nextElementSibling)card.nextElementSibling.classList.add('border-t-transparent')

                activeCard = card
            }

mixin section-stats(data = {})
    -
        data = { ...data, ...attributes }

        const id = `stats-${Math.round(Math.random() * 1000)}`
    +section-layout({ left: true, ...data })
        .grid.grid-cols-1.md_grid-cols-2.lg_grid-cols-4.gap-2.md_gap-12.lg_gap-10
            for col, idx in data.columns
                .py-6.lg_py-9.px-6.flex.md_flex-col.items-center.justify-between.bg-yellow-50.rounded-2xl
                    h3.text-base.font-semibold= col.title
                    .md_mt-2.value.text-3xl.md_text-4xl.lg_text-5xl.text-yellow-700.font-bold.whitespace-nowrap(id=`${id}-${col.field}-value`) 0
        script.
            const locale = document.documentElement.lang
            const speed = 100
            const count = {}

            fetch('https://citizenos.com/.netlify/functions/stats').then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`)

                return response.json()
            }).then(response => {
                Object.keys(response).forEach(key => {
                    const counter = document.getElementById(`#{id}-${key}-value`)
                    const target = response[key]
                    const increment = Math.trunc(target / speed)

                    function updateCount () {
                        if(!count[key]) count[key] = 0
                        count[key] += increment

                        if (count[key] < target) {
                            counter.innerText = Math.ceil(count[key]).toLocaleString(locale)

                            setTimeout(updateCount, 1)
                        } else {
                            counter.innerText = Math.ceil(target).toLocaleString(locale)
                        }
                    }

                    updateCount()
                })
            })

mixin section-custom(data = {})
    -
        const original = data.id
        const wrapper = `section-custom-wrapper-${data.id}`
        const placeholder = `section-custom-placeholder-${data.id}`

        data = { ...data, ...attributes, id: wrapper }
    +section-layout(data)
        div(id=placeholder)
        script.
            document.addEventListener('DOMContentLoaded', function () {
                const original = document.getElementById('#{original}')
                const wrapper = document.getElementById('#{wrapper}')
                const placeholder = document.getElementById('#{placeholder}')
                const clone = original.cloneNode(true)

                original.remove()

                clone.removeAttribute('id')
                clone.classList.remove('hidden')

                document.getElementById('#{placeholder}').replaceWith(clone)

                wrapper.id = '#{original}'
            })
